# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `devise-jwt` gem.
# Please instead update this file by running `bin/tapioca gem devise-jwt`.

# Authentication library
#
# source://devise-jwt//lib/devise/jwt/version.rb#3
module Devise
  # source://devise/4.8.1/lib/devise.rb#136
  def allow_unconfirmed_access_for; end

  # source://devise/4.8.1/lib/devise.rb#136
  def allow_unconfirmed_access_for=(val); end

  # source://devise/4.8.1/lib/devise.rb#81
  def authentication_keys; end

  # source://devise/4.8.1/lib/devise.rb#81
  def authentication_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#89
  def case_insensitive_keys; end

  # source://devise/4.8.1/lib/devise.rb#89
  def case_insensitive_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#254
  def clean_up_csrf_token_on_authentication; end

  # source://devise/4.8.1/lib/devise.rb#254
  def clean_up_csrf_token_on_authentication=(val); end

  # source://devise/4.8.1/lib/devise.rb#140
  def confirm_within; end

  # source://devise/4.8.1/lib/devise.rb#140
  def confirm_within=(val); end

  # source://devise/4.8.1/lib/devise.rb#144
  def confirmation_keys; end

  # source://devise/4.8.1/lib/devise.rb#144
  def confirmation_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#207
  def default_scope; end

  # source://devise/4.8.1/lib/devise.rb#207
  def default_scope=(val); end

  # source://devise/4.8.1/lib/devise.rb#115
  def email_regexp; end

  # source://devise/4.8.1/lib/devise.rb#115
  def email_regexp=(val); end

  # source://devise/4.8.1/lib/devise.rb#131
  def expire_all_remember_me_on_sign_out; end

  # source://devise/4.8.1/lib/devise.rb#131
  def expire_all_remember_me_on_sign_out=(val); end

  # source://devise/4.8.1/lib/devise.rb#127
  def extend_remember_period; end

  # source://devise/4.8.1/lib/devise.rb#127
  def extend_remember_period=(val); end

  # source://devise/4.8.1/lib/devise.rb#275
  def helpers; end

  # source://devise/4.8.1/lib/devise.rb#97
  def http_authenticatable; end

  # source://devise/4.8.1/lib/devise.rb#97
  def http_authenticatable=(val); end

  # source://devise/4.8.1/lib/devise.rb#101
  def http_authenticatable_on_xhr; end

  # source://devise/4.8.1/lib/devise.rb#101
  def http_authenticatable_on_xhr=(val); end

  # source://devise/4.8.1/lib/devise.rb#77
  def http_authentication_key; end

  # source://devise/4.8.1/lib/devise.rb#77
  def http_authentication_key=(val); end

  # source://devise/4.8.1/lib/devise.rb#109
  def http_authentication_realm; end

  # source://devise/4.8.1/lib/devise.rb#109
  def http_authentication_realm=(val); end

  # source://devise/4.8.1/lib/devise.rb#289
  def last_attempt_warning; end

  # source://devise/4.8.1/lib/devise.rb#289
  def last_attempt_warning=(val); end

  # source://devise/4.8.1/lib/devise.rb#174
  def lock_strategy; end

  # source://devise/4.8.1/lib/devise.rb#174
  def lock_strategy=(val); end

  # source://devise/4.8.1/lib/devise.rb#211
  def mailer_sender; end

  # source://devise/4.8.1/lib/devise.rb#211
  def mailer_sender=(val); end

  # source://devise/4.8.1/lib/devise.rb#267
  def mappings; end

  # source://devise/4.8.1/lib/devise.rb#187
  def maximum_attempts; end

  # source://devise/4.8.1/lib/devise.rb#187
  def maximum_attempts=(val); end

  # source://devise/4.8.1/lib/devise.rb#219
  def navigational_formats; end

  # source://devise/4.8.1/lib/devise.rb#219
  def navigational_formats=(val); end

  # source://devise/4.8.1/lib/devise.rb#271
  def omniauth_configs; end

  # source://devise/4.8.1/lib/devise.rb#250
  def omniauth_path_prefix; end

  # source://devise/4.8.1/lib/devise.rb#250
  def omniauth_path_prefix=(val); end

  # source://devise/4.8.1/lib/devise.rb#105
  def params_authenticatable; end

  # source://devise/4.8.1/lib/devise.rb#105
  def params_authenticatable=(val); end

  # source://devise/4.8.1/lib/devise.rb#285
  def paranoid; end

  # source://devise/4.8.1/lib/devise.rb#285
  def paranoid=(val); end

  # source://devise/4.8.1/lib/devise.rb#233
  def parent_controller; end

  # source://devise/4.8.1/lib/devise.rb#233
  def parent_controller=(val); end

  # source://devise/4.8.1/lib/devise.rb#239
  def parent_mailer; end

  # source://devise/4.8.1/lib/devise.rb#239
  def parent_mailer=(val); end

  # source://devise/4.8.1/lib/devise.rb#119
  def password_length; end

  # source://devise/4.8.1/lib/devise.rb#119
  def password_length=(val); end

  # source://devise/4.8.1/lib/devise.rb#156
  def pepper; end

  # source://devise/4.8.1/lib/devise.rb#156
  def pepper=(val); end

  # source://devise/4.8.1/lib/devise.rb#148
  def reconfirmable; end

  # source://devise/4.8.1/lib/devise.rb#148
  def reconfirmable=(val); end

  # source://devise/4.8.1/lib/devise.rb#261
  def reload_routes; end

  # source://devise/4.8.1/lib/devise.rb#261
  def reload_routes=(val); end

  # source://devise/4.8.1/lib/devise.rb#123
  def remember_for; end

  # source://devise/4.8.1/lib/devise.rb#123
  def remember_for=(val); end

  # source://devise/4.8.1/lib/devise.rb#69
  def rememberable_options; end

  # source://devise/4.8.1/lib/devise.rb#69
  def rememberable_options=(val); end

  # source://devise/4.8.1/lib/devise.rb#85
  def request_keys; end

  # source://devise/4.8.1/lib/devise.rb#85
  def request_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#195
  def reset_password_keys; end

  # source://devise/4.8.1/lib/devise.rb#195
  def reset_password_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#199
  def reset_password_within; end

  # source://devise/4.8.1/lib/devise.rb#199
  def reset_password_within=(val); end

  # source://devise/4.8.1/lib/devise.rb#245
  def router_name; end

  # source://devise/4.8.1/lib/devise.rb#245
  def router_name=(val); end

  # source://devise/4.8.1/lib/devise.rb#169
  def scoped_views; end

  # source://devise/4.8.1/lib/devise.rb#169
  def scoped_views=(val); end

  # source://devise/4.8.1/lib/devise.rb#65
  def secret_key; end

  # source://devise/4.8.1/lib/devise.rb#65
  def secret_key=(val); end

  # source://devise/4.8.1/lib/devise.rb#160
  def send_email_changed_notification; end

  # source://devise/4.8.1/lib/devise.rb#160
  def send_email_changed_notification=(val); end

  # source://devise/4.8.1/lib/devise.rb#164
  def send_password_change_notification; end

  # source://devise/4.8.1/lib/devise.rb#164
  def send_password_change_notification=(val); end

  # source://devise/4.8.1/lib/devise.rb#297
  def sign_in_after_change_password; end

  # source://devise/4.8.1/lib/devise.rb#297
  def sign_in_after_change_password=(val); end

  # source://devise/4.8.1/lib/devise.rb#203
  def sign_in_after_reset_password; end

  # source://devise/4.8.1/lib/devise.rb#203
  def sign_in_after_reset_password=(val); end

  # source://devise/4.8.1/lib/devise.rb#223
  def sign_out_all_scopes; end

  # source://devise/4.8.1/lib/devise.rb#223
  def sign_out_all_scopes=(val); end

  # source://devise/4.8.1/lib/devise.rb#227
  def sign_out_via; end

  # source://devise/4.8.1/lib/devise.rb#227
  def sign_out_via=(val); end

  # source://devise/4.8.1/lib/devise.rb#215
  def skip_session_storage; end

  # source://devise/4.8.1/lib/devise.rb#215
  def skip_session_storage=(val); end

  # source://devise/4.8.1/lib/devise.rb#73
  def stretches; end

  # source://devise/4.8.1/lib/devise.rb#73
  def stretches=(val); end

  # source://devise/4.8.1/lib/devise.rb#93
  def strip_whitespace_keys; end

  # source://devise/4.8.1/lib/devise.rb#93
  def strip_whitespace_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#152
  def timeout_in; end

  # source://devise/4.8.1/lib/devise.rb#152
  def timeout_in=(val); end

  # source://devise/4.8.1/lib/devise.rb#293
  def token_generator; end

  # source://devise/4.8.1/lib/devise.rb#293
  def token_generator=(val); end

  # source://devise/4.8.1/lib/devise.rb#191
  def unlock_in; end

  # source://devise/4.8.1/lib/devise.rb#191
  def unlock_in=(val); end

  # source://devise/4.8.1/lib/devise.rb#178
  def unlock_keys; end

  # source://devise/4.8.1/lib/devise.rb#178
  def unlock_keys=(val); end

  # source://devise/4.8.1/lib/devise.rb#183
  def unlock_strategy; end

  # source://devise/4.8.1/lib/devise.rb#183
  def unlock_strategy=(val); end

  # source://devise/4.8.1/lib/devise.rb#280
  def warden_config; end

  # source://devise/4.8.1/lib/devise.rb#280
  def warden_config=(val); end

  class << self
    # source://devise/4.8.1/lib/devise.rb#300
    def activerecord51?; end

    # source://devise/4.8.1/lib/devise.rb#353
    def add_mapping(resource, options); end

    # source://devise/4.8.1/lib/devise.rb#386
    def add_module(module_name, options = T.unsafe(nil)); end

    # source://devise/4.8.1/lib/devise.rb#136
    def allow_unconfirmed_access_for; end

    # source://devise/4.8.1/lib/devise.rb#136
    def allow_unconfirmed_access_for=(val); end

    # source://devise/4.8.1/lib/devise.rb#81
    def authentication_keys; end

    # source://devise/4.8.1/lib/devise.rb#81
    def authentication_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#333
    def available_router_name; end

    # source://devise/4.8.1/lib/devise.rb#89
    def case_insensitive_keys; end

    # source://devise/4.8.1/lib/devise.rb#89
    def case_insensitive_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#254
    def clean_up_csrf_token_on_authentication; end

    # source://devise/4.8.1/lib/devise.rb#254
    def clean_up_csrf_token_on_authentication=(val); end

    # source://devise/4.8.1/lib/devise.rb#475
    def configure_warden!; end

    # source://devise/4.8.1/lib/devise.rb#140
    def confirm_within; end

    # source://devise/4.8.1/lib/devise.rb#140
    def confirm_within=(val); end

    # source://devise/4.8.1/lib/devise.rb#144
    def confirmation_keys; end

    # source://devise/4.8.1/lib/devise.rb#144
    def confirmation_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#207
    def default_scope; end

    # source://devise/4.8.1/lib/devise.rb#207
    def default_scope=(val); end

    # source://devise/4.8.1/lib/devise.rb#115
    def email_regexp; end

    # source://devise/4.8.1/lib/devise.rb#115
    def email_regexp=(val); end

    # source://devise/4.8.1/lib/devise.rb#131
    def expire_all_remember_me_on_sign_out; end

    # source://devise/4.8.1/lib/devise.rb#131
    def expire_all_remember_me_on_sign_out=(val); end

    # source://devise/4.8.1/lib/devise.rb#127
    def extend_remember_period; end

    # source://devise/4.8.1/lib/devise.rb#127
    def extend_remember_period=(val); end

    # source://devise/4.8.1/lib/devise.rb#500
    def friendly_token(length = T.unsafe(nil)); end

    # source://devise/4.8.1/lib/devise.rb#275
    def helpers; end

    # source://devise/4.8.1/lib/devise.rb#97
    def http_authenticatable; end

    # source://devise/4.8.1/lib/devise.rb#97
    def http_authenticatable=(val); end

    # source://devise/4.8.1/lib/devise.rb#101
    def http_authenticatable_on_xhr; end

    # source://devise/4.8.1/lib/devise.rb#101
    def http_authenticatable_on_xhr=(val); end

    # source://devise/4.8.1/lib/devise.rb#77
    def http_authentication_key; end

    # source://devise/4.8.1/lib/devise.rb#77
    def http_authentication_key=(val); end

    # source://devise/4.8.1/lib/devise.rb#109
    def http_authentication_realm; end

    # source://devise/4.8.1/lib/devise.rb#109
    def http_authentication_realm=(val); end

    # source://devise/4.8.1/lib/devise.rb#456
    def include_helpers(scope); end

    # Yields to Warden::JWTAuth.config
    #
    # @see Warden::JWTAuth
    # @yield [Devise::JWT.config]
    #
    # source://devise-jwt//lib/devise/jwt.rb#19
    def jwt; end

    # source://devise/4.8.1/lib/devise.rb#289
    def last_attempt_warning; end

    # source://devise/4.8.1/lib/devise.rb#289
    def last_attempt_warning=(val); end

    # source://devise/4.8.1/lib/devise.rb#174
    def lock_strategy; end

    # source://devise/4.8.1/lib/devise.rb#174
    def lock_strategy=(val); end

    # source://devise/4.8.1/lib/devise.rb#342
    def mailer; end

    # source://devise/4.8.1/lib/devise.rb#347
    def mailer=(class_name); end

    # source://devise/4.8.1/lib/devise.rb#211
    def mailer_sender; end

    # source://devise/4.8.1/lib/devise.rb#211
    def mailer_sender=(val); end

    # source://devise/4.8.1/lib/devise.rb#267
    def mappings; end

    # source://devise/4.8.1/lib/devise.rb#187
    def maximum_attempts; end

    # source://devise/4.8.1/lib/devise.rb#187
    def maximum_attempts=(val); end

    # source://devise/4.8.1/lib/devise.rb#219
    def navigational_formats; end

    # source://devise/4.8.1/lib/devise.rb#219
    def navigational_formats=(val); end

    # source://devise/4.8.1/lib/devise.rb#450
    def omniauth(provider, *args); end

    # source://devise/4.8.1/lib/devise.rb#271
    def omniauth_configs; end

    # source://devise/4.8.1/lib/devise.rb#250
    def omniauth_path_prefix; end

    # source://devise/4.8.1/lib/devise.rb#250
    def omniauth_path_prefix=(val); end

    # source://devise/4.8.1/lib/devise.rb#337
    def omniauth_providers; end

    # source://devise/4.8.1/lib/devise.rb#105
    def params_authenticatable; end

    # source://devise/4.8.1/lib/devise.rb#105
    def params_authenticatable=(val); end

    # source://devise/4.8.1/lib/devise.rb#285
    def paranoid; end

    # source://devise/4.8.1/lib/devise.rb#285
    def paranoid=(val); end

    # source://devise/4.8.1/lib/devise.rb#233
    def parent_controller; end

    # source://devise/4.8.1/lib/devise.rb#233
    def parent_controller=(val); end

    # source://devise/4.8.1/lib/devise.rb#239
    def parent_mailer; end

    # source://devise/4.8.1/lib/devise.rb#239
    def parent_mailer=(val); end

    # source://devise/4.8.1/lib/devise.rb#119
    def password_length; end

    # source://devise/4.8.1/lib/devise.rb#119
    def password_length=(val); end

    # source://devise/4.8.1/lib/devise.rb#156
    def pepper; end

    # source://devise/4.8.1/lib/devise.rb#156
    def pepper=(val); end

    # source://devise/4.8.1/lib/devise.rb#148
    def reconfirmable; end

    # source://devise/4.8.1/lib/devise.rb#148
    def reconfirmable=(val); end

    # source://devise/4.8.1/lib/devise.rb#325
    def ref(arg); end

    # source://devise/4.8.1/lib/devise.rb#468
    def regenerate_helpers!; end

    # source://devise/4.8.1/lib/devise.rb#261
    def reload_routes; end

    # source://devise/4.8.1/lib/devise.rb#261
    def reload_routes=(val); end

    # source://devise/4.8.1/lib/devise.rb#123
    def remember_for; end

    # source://devise/4.8.1/lib/devise.rb#123
    def remember_for=(val); end

    # source://devise/4.8.1/lib/devise.rb#69
    def rememberable_options; end

    # source://devise/4.8.1/lib/devise.rb#69
    def rememberable_options=(val); end

    # source://devise/4.8.1/lib/devise.rb#85
    def request_keys; end

    # source://devise/4.8.1/lib/devise.rb#85
    def request_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#195
    def reset_password_keys; end

    # source://devise/4.8.1/lib/devise.rb#195
    def reset_password_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#199
    def reset_password_within; end

    # source://devise/4.8.1/lib/devise.rb#199
    def reset_password_within=(val); end

    # source://devise/4.8.1/lib/devise.rb#245
    def router_name; end

    # source://devise/4.8.1/lib/devise.rb#245
    def router_name=(val); end

    # source://devise/4.8.1/lib/devise.rb#169
    def scoped_views; end

    # source://devise/4.8.1/lib/devise.rb#169
    def scoped_views=(val); end

    # source://devise/4.8.1/lib/devise.rb#65
    def secret_key; end

    # source://devise/4.8.1/lib/devise.rb#65
    def secret_key=(val); end

    # source://devise/4.8.1/lib/devise.rb#508
    def secure_compare(a, b); end

    # source://devise/4.8.1/lib/devise.rb#160
    def send_email_changed_notification; end

    # source://devise/4.8.1/lib/devise.rb#160
    def send_email_changed_notification=(val); end

    # source://devise/4.8.1/lib/devise.rb#164
    def send_password_change_notification; end

    # source://devise/4.8.1/lib/devise.rb#164
    def send_password_change_notification=(val); end

    # source://devise/4.8.1/lib/devise.rb#306
    def setup; end

    # source://devise/4.8.1/lib/devise.rb#297
    def sign_in_after_change_password; end

    # source://devise/4.8.1/lib/devise.rb#297
    def sign_in_after_change_password=(val); end

    # source://devise/4.8.1/lib/devise.rb#203
    def sign_in_after_reset_password; end

    # source://devise/4.8.1/lib/devise.rb#203
    def sign_in_after_reset_password=(val); end

    # source://devise/4.8.1/lib/devise.rb#223
    def sign_out_all_scopes; end

    # source://devise/4.8.1/lib/devise.rb#223
    def sign_out_all_scopes=(val); end

    # source://devise/4.8.1/lib/devise.rb#227
    def sign_out_via; end

    # source://devise/4.8.1/lib/devise.rb#227
    def sign_out_via=(val); end

    # source://devise/4.8.1/lib/devise.rb#215
    def skip_session_storage; end

    # source://devise/4.8.1/lib/devise.rb#215
    def skip_session_storage=(val); end

    # source://devise/4.8.1/lib/devise.rb#73
    def stretches; end

    # source://devise/4.8.1/lib/devise.rb#73
    def stretches=(val); end

    # source://devise/4.8.1/lib/devise.rb#93
    def strip_whitespace_keys; end

    # source://devise/4.8.1/lib/devise.rb#93
    def strip_whitespace_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#152
    def timeout_in; end

    # source://devise/4.8.1/lib/devise.rb#152
    def timeout_in=(val); end

    # source://devise/4.8.1/lib/devise.rb#293
    def token_generator; end

    # source://devise/4.8.1/lib/devise.rb#293
    def token_generator=(val); end

    # source://devise/4.8.1/lib/devise.rb#191
    def unlock_in; end

    # source://devise/4.8.1/lib/devise.rb#191
    def unlock_in=(val); end

    # source://devise/4.8.1/lib/devise.rb#178
    def unlock_keys; end

    # source://devise/4.8.1/lib/devise.rb#178
    def unlock_keys=(val); end

    # source://devise/4.8.1/lib/devise.rb#183
    def unlock_strategy; end

    # source://devise/4.8.1/lib/devise.rb#183
    def unlock_strategy=(val); end

    # source://devise/4.8.1/lib/devise.rb#442
    def warden(&block); end

    # source://devise/4.8.1/lib/devise.rb#280
    def warden_config; end

    # source://devise/4.8.1/lib/devise.rb#280
    def warden_config=(val); end
  end
end

# JWT extension for devise
#
# source://devise-jwt//lib/devise/jwt/version.rb#4
module Devise::JWT
  extend ::Dry::Core::Constants
  extend ::Dry::Configurable
  extend ::Dry::Configurable::Methods
  extend ::Dry::Configurable::ClassMethods

  class << self
    # source://devise-jwt//lib/devise/jwt.rb#29
    def forward_to_warden(setting, value); end
  end
end

# Generate defaults to be used in the configuration for the Devise
# installation in a Rails app
#
# @see Warden::JWTAuth
#
# source://devise-jwt//lib/devise/jwt/defaults_generator.rb#9
class Devise::JWT::DefaultsGenerator
  # @return [DefaultsGenerator] a new instance of DefaultsGenerator
  #
  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#16
  def initialize; end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#26
  def call; end

  # Returns the value of attribute defaults.
  #
  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#10
  def defaults; end

  # Returns the value of attribute devise_mappings.
  #
  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#10
  def devise_mappings; end

  private

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#38
  def add_defaults(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#57
  def add_dispatch_requests(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#45
  def add_mapping(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#68
  def add_registration_request(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#74
  def add_revocation_requests(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#51
  def add_revocation_strategy(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#62
  def add_sign_in_request(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#88
  def registration_requests(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#92
  def requests(inspector, name); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#100
  def requests_for_format(path, methods, format); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#80
  def sign_in_requests(inspector); end

  # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#84
  def sign_out_requests(inspector); end

  class << self
    # source://devise-jwt//lib/devise/jwt/defaults_generator.rb#12
    def call; end
  end
end

# Inspect and extract information from a Devise mapping
#
# source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#6
class Devise::JWT::MappingInspector
  # @return [MappingInspector] a new instance of MappingInspector
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#9
  def initialize(scope); end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#46
  def formats; end

  # @return [Boolean]
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#14
  def jwt?; end

  # Returns the value of attribute mapping.
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#7
  def mapping; end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#37
  def methods(name); end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#26
  def model; end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#30
  def path(name); end

  # @return [Boolean]
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#22
  def registration?; end

  # Returns the value of attribute scope.
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#7
  def scope; end

  # @return [Boolean]
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#18
  def session?; end

  private

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#69
  def default_formats; end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#52
  def path_parts(name); end

  # @return [Boolean]
  #
  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#59
  def routes?(name); end

  # source://devise-jwt//lib/devise/jwt/mapping_inspector.rb#63
  def sign_out_via; end
end

# Pluck to rails
#
# source://devise-jwt//lib/devise/jwt/railtie.rb#8
class Devise::JWT::Railtie < ::Rails::Railtie; end

# Pre-build revocation strategies
#
# @see Warden::JWTAuth::Interfaces::RevocationStrategy
#
# source://devise-jwt//lib/devise/jwt/revocation_strategies/jti_matcher.rb#8
module Devise::JWT::RevocationStrategies; end

# This strategy must be included in the user model.
#
# The JwtAllowlist table must include `jti`, `aud`, `exp` and `user_id`
# columns
#
# In order to tell whether a token is revoked, it just tries to find the
# `jti` and `aud` values from the token on the `allowlisted_jwts`
# table for the respective user.
#
# If the values don't exist means the token was revoked.
# On revocation, it deletes the matching record from the
# `allowlisted_jwts` table.
#
# On sign in, it creates a new record with the `jti` and `aud` values.
#
# source://devise-jwt//lib/devise/jwt/revocation_strategies/allowlist.rb#22
module Devise::JWT::RevocationStrategies::Allowlist
  extend ::ActiveSupport::Concern

  # Warden::JWTAuth::Interfaces::User#on_jwt_dispatch
  #
  # source://devise-jwt//lib/devise/jwt/revocation_strategies/allowlist.rb#41
  def on_jwt_dispatch(_token, payload); end
end

# This strategy must be included in an ActiveRecord model, and requires
# that it has a `jti` column.
#
# In order to tell whether a token is revoked, it just checks whether
# `jti` is in the table. On revocation, creates a new record with it.
#
# source://devise-jwt//lib/devise/jwt/revocation_strategies/denylist.rb#13
module Devise::JWT::RevocationStrategies::Denylist
  extend ::ActiveSupport::Concern
end

# This strategy must be included in the user model, and requires that it
# has a `jti` column. It adds the value of the `jti` column as the `jti`
# claim in dispatched tokens.
#
# In order to tell whether a token is revoked, it just compares both `jti`
# values. On revocation, it changes column value so that the token is no
# longer valid.
#
# source://devise-jwt//lib/devise/jwt/revocation_strategies/jti_matcher.rb#16
module Devise::JWT::RevocationStrategies::JTIMatcher
  extend ::ActiveSupport::Concern

  # Warden::JWTAuth::Interfaces::User#jwt_payload
  #
  # source://devise-jwt//lib/devise/jwt/revocation_strategies/jti_matcher.rb#39
  def jwt_payload; end

  private

  # source://devise-jwt//lib/devise/jwt/revocation_strategies/jti_matcher.rb#45
  def initialize_jti; end
end

# This strategy is just a null object pattern strategy, so it does not
# revoke anything
#
# source://devise-jwt//lib/devise/jwt/revocation_strategies/null.rb#10
module Devise::JWT::RevocationStrategies::Null
  class << self
    # @return [Boolean]
    # @see Warden::JWTAuth::Interfaces::RevocationStrategy#jwt_revoked?
    #
    # source://devise-jwt//lib/devise/jwt/revocation_strategies/null.rb#12
    def jwt_revoked?(_payload, _user); end

    # @see Warden::JWTAuth::Interfaces::RevocationStrategy#revoke_jwt
    #
    # source://devise-jwt//lib/devise/jwt/revocation_strategies/null.rb#17
    def revoke_jwt(_payload, _user); end
  end
end

# source://devise-jwt//lib/devise/jwt/version.rb#5
Devise::JWT::VERSION = T.let(T.unsafe(nil), String)

# Devise models
#
# @see Devise::Models
#
# source://devise-jwt//lib/devise/jwt/models/jwt_authenticatable.rb#6
module Devise::Models
  # source://devise/4.8.1/lib/devise/models.rb#79
  def devise(*modules); end

  # source://devise/4.8.1/lib/devise/models.rb#115
  def devise_modules_hook!; end

  class << self
    # source://devise/4.8.1/lib/devise/models.rb#54
    def check_fields!(klass); end

    # source://devise/4.8.1/lib/devise/models.rb#31
    def config(mod, *accessors); end
  end
end

# Model that will be authenticatable with the JWT strategy
#
# @see [Warden::JWTAuth::Interfaces::UserRepository]
# @see [Warden::JWTAuth::Interfaces::User]
#
# source://devise-jwt//lib/devise/jwt/models/jwt_authenticatable.rb#11
module Devise::Models::JwtAuthenticatable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::Devise::Models::JwtAuthenticatable::ClassMethods

  # source://devise-jwt//lib/devise/jwt/models/jwt_authenticatable.rb#24
  def jwt_subject; end
end

# source://devise-jwt//lib/devise/jwt/models/jwt_authenticatable.rb#0
module Devise::Models::JwtAuthenticatable::ClassMethods
  # source://devise/4.8.1/lib/devise/models.rb#37
  def jwt_revocation_strategy; end

  # source://devise/4.8.1/lib/devise/models.rb#47
  def jwt_revocation_strategy=(value); end

  class << self
    # source://devise/4.8.1/lib/devise/models.rb#32
    def available_configs; end

    # source://devise/4.8.1/lib/devise/models.rb#32
    def available_configs=(_arg0); end
  end
end
