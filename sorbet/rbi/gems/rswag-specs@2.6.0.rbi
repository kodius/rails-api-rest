# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rswag-specs` gem.
# Please instead update this file by running `bin/tapioca gem rswag-specs`.

# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#3
module Rswag; end

# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#4
module Rswag::Specs
  class << self
    # source://rswag-specs//lib/rswag/specs.rb#21
    def config; end
  end
end

# source://rswag-specs//lib/rswag/specs/configuration.rb#5
class Rswag::Specs::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://rswag-specs//lib/rswag/specs/configuration.rb#6
  def initialize(rspec_config); end

  # @raise [ConfigurationError]
  #
  # source://rswag-specs//lib/rswag/specs/configuration.rb#47
  def get_swagger_doc(name); end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#54
  def get_swagger_doc_version(name); end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#20
  def swagger_docs; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#30
  def swagger_dry_run; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#38
  def swagger_format; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#10
  def swagger_root; end
end

# source://rswag-specs//lib/rswag/specs/configuration.rb#60
class Rswag::Specs::ConfigurationError < ::StandardError; end

# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#5
module Rswag::Specs::ExampleGroupHelpers
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#35
  def consumes(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def delete(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#19
  def deprecated(value); end

  # NOTE: 'description' requires special treatment because ExampleGroup already
  # defines a method with that name. Provide an override that supports the existing
  # functionality while also setting the appropriate metadata if applicable
  #
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#27
  def description(value = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#80
  def example(mime, name, value, summary = T.unsafe(nil), description = T.unsafe(nil)); end

  # NOTE: Similar to 'description', 'examples' need to handle the case when
  # being invoked with no params to avoid overriding 'examples' method of
  # rspec-core ExampleGroup
  #
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#72
  def examples(examples = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def get(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def head(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#63
  def header(name, attributes); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#19
  def operationId(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def options(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#40
  def parameter(attributes); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def patch(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#6
  def path(template, metadata = T.unsafe(nil), &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def post(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#35
  def produces(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def put(summary, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#54
  def response(code, description, metadata = T.unsafe(nil), &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#102
  def run_test!(&block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#59
  def schema(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#35
  def schemes(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#19
  def security(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#35
  def tags(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#12
  def trace(summary, &block); end
end

# source://rswag-specs//lib/rswag/specs/example_helpers.rb#8
module Rswag::Specs::ExampleHelpers
  # source://rswag-specs//lib/rswag/specs/example_helpers.rb#29
  def assert_response_matches_metadata(metadata); end

  # source://rswag-specs//lib/rswag/specs/example_helpers.rb#9
  def submit_request(metadata); end
end

# source://rswag-specs//lib/rswag/specs/extended_schema.rb#7
class Rswag::Specs::ExtendedSchema < ::JSON::Schema::Draft4
  # @return [ExtendedSchema] a new instance of ExtendedSchema
  #
  # source://rswag-specs//lib/rswag/specs/extended_schema.rb#8
  def initialize; end

  # source://rswag-specs//lib/rswag/specs/extended_schema.rb#14
  def validate(current_schema, data, *_arg2); end
end

# source://rswag-specs//lib/rswag/specs/request_factory.rb#249
class Rswag::Specs::MissingParameterError < ::StandardError
  # @return [MissingParameterError] a new instance of MissingParameterError
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#252
  def initialize(body_param); end

  # Returns the value of attribute body_param.
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#250
  def body_param; end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#256
  def message; end
end

# Support Rails 3+ and RSpec 2+ (sigh!)
#
# source://rswag-specs//lib/rswag/specs.rb#26
Rswag::Specs::RAILS_VERSION = T.let(T.unsafe(nil), Integer)

# source://rswag-specs//lib/rswag/specs.rb#27
Rswag::Specs::RSPEC_VERSION = T.let(T.unsafe(nil), Integer)

# source://rswag-specs//lib/rswag/specs/railtie.rb#5
class Rswag::Specs::Railtie < ::Rails::Railtie; end

# source://rswag-specs//lib/rswag/specs/request_factory.rb#9
class Rswag::Specs::RequestFactory
  # @return [RequestFactory] a new instance of RequestFactory
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#10
  def initialize(config = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#14
  def build_request(metadata, example); end

  private

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#177
  def add_headers(request, metadata, swagger_doc, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#104
  def add_path(request, metadata, swagger_doc, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#212
  def add_payload(request, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#100
  def add_verb(request, metadata); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#223
  def build_form_payload(parameters, example); end

  # @raise [MissingParameterError]
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#234
  def build_json_payload(parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#123
  def build_query_string_part(param, value, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#86
  def definition_version(swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#40
  def derive_security_params(metadata, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#244
  def doc_version(doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#28
  def expand_parameters(metadata, swagger_doc, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#73
  def key_version(ref, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#65
  def resolve_parameter(ref, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#51
  def security_version(scheme_names, swagger_doc); end
end

# source://rswag-specs//lib/rswag/specs/response_validator.rb#10
class Rswag::Specs::ResponseValidator
  # @return [ResponseValidator] a new instance of ResponseValidator
  #
  # source://rswag-specs//lib/rswag/specs/response_validator.rb#11
  def initialize(config = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#15
  def validate!(metadata, response); end

  private

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#60
  def definitions_or_component_schemas(swagger_doc, version); end

  # @raise [UnexpectedResponse]
  #
  # source://rswag-specs//lib/rswag/specs/response_validator.rb#41
  def validate_body!(metadata, swagger_doc, body); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#25
  def validate_code!(metadata, response); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#34
  def validate_headers!(metadata, headers); end
end

# source://rswag-specs//lib/rswag/specs/response_validator.rb#75
class Rswag::Specs::UnexpectedResponse < ::StandardError; end
